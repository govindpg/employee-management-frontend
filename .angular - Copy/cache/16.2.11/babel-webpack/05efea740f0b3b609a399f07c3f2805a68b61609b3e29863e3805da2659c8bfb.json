{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Swal from 'sweetalert2';\nexport let LoginComponent = class LoginComponent {\n  constructor(api, rou) {\n    this.api = api;\n    this.rou = rou;\n    this.email = '';\n    this.password = '';\n  }\n  login() {\n    if (!this.email || !this.password) {\n      alert('plesase fill the form ');\n    } else {\n      this.api.authorization().subscribe({\n        next: res => {\n          const {\n            email,\n            password\n          } = res;\n          if (email == this.email) {\n            Swal.fire({\n              title: \"Login Sucessfull\",\n              icon: \"success\",\n              showConfirmButton: false,\n              timer: 2000\n            });\n          } else {\n            Swal.fire(\"Error\", \"Email or Password is incorrect \", \"error\");\n          }\n          //navigate to dashbaord\n        },\n\n        error: res => {\n          console.log(res);\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Swal","LoginComponent","constructor","api","rou","email","password","login","alert","authorization","subscribe","next","res","fire","title","icon","showConfirmButton","timer","error","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Govind\\Desktop\\MEARN\\Angular\\employee-management\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { AdminapiService } from '../servcies/adminapi.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  email:string=''\n  password:string=''\n\nconstructor(private api:AdminapiService,private rou ){}\n\n  login( ){  //classin ullil no fn required\n\n    if(!this.email || !this.password ){\n      alert('plesase fill the form ')\n    }else{\n    \n\n      \n\n\n\n  this.api.authorization().subscribe({\n    next:(res:any)=>{\n      const {email,password} = res\n      if(email==this.email){\n        Swal.fire({\n          title: \"Login Sucessfull\",\n         \n          icon: \"success\",\n          showConfirmButton: false,\n          timer: 2000\n        \n        });\n\n\n\n      }else{\n        Swal.fire(\"Error\",\"Email or Password is incorrect \",\"error\")\n      }\n\n\n      //navigate to dashbaord\n  },\n  error:(res:any)=>{\n    console.log(res);\n  }\n})\n    }\n  }\n  \n  \n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,OAAOC,IAAI,MAAM,aAAa;AAQvB,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAK3BC,YAAoBC,GAAmB,EAASC,GAAG;IAA/B,KAAAD,GAAG,GAAHA,GAAG;IAAyB,KAAAC,GAAG,GAAHA,GAAG;IAHjD,KAAAC,KAAK,GAAQ,EAAE;IACf,KAAAC,QAAQ,GAAQ,EAAE;EAEkC;EAEpDC,KAAKA,CAAA;IAEH,IAAG,CAAC,IAAI,CAACF,KAAK,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAChCE,KAAK,CAAC,wBAAwB,CAAC;KAChC,MAAI;MAOP,IAAI,CAACL,GAAG,CAACM,aAAa,EAAE,CAACC,SAAS,CAAC;QACjCC,IAAI,EAAEC,GAAO,IAAG;UACd,MAAM;YAACP,KAAK;YAACC;UAAQ,CAAC,GAAGM,GAAG;UAC5B,IAAGP,KAAK,IAAE,IAAI,CAACA,KAAK,EAAC;YACnBL,IAAI,CAACa,IAAI,CAAC;cACRC,KAAK,EAAE,kBAAkB;cAEzBC,IAAI,EAAE,SAAS;cACfC,iBAAiB,EAAE,KAAK;cACxBC,KAAK,EAAE;aAER,CAAC;WAIH,MAAI;YACHjB,IAAI,CAACa,IAAI,CAAC,OAAO,EAAC,iCAAiC,EAAC,OAAO,CAAC;;UAI9D;QACJ,CAAC;;QACDK,KAAK,EAAEN,GAAO,IAAG;UACfO,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;QAClB;OACD,CAAC;;EAEA;CAID;AAjDYX,cAAc,GAAAoB,UAAA,EAL1BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWvB,cAAc,CAiD1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}